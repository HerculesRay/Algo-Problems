import java.util.*;

public class MaxSumKOp{
    public static int findMaxSum(int[] arr,int n,int k){
        int maxsum=0;
        int negct=0,zeroct=0;
        int min=Integer.MIN_VALUE;
        int j=0;
        for(int i=0;i<n;i++){
            if(arr[i]==0){
                zeroct++;
                continue;
            }
            else if(arr[i]<0){
                negct++;
            }
        }
        Arrays.sort(arr);
        if(negct>=k){
            for(int i=0;i<k;i++){
                arr[i]=0-arr[i];
            }
        }
        else if(k>negct && zeroct>0){
            for(int i=0;i<negct;i++){
                arr[i]=0-arr[i];
            }
        }
        else{
            for(int i=0;i<negct;i++){
                arr[i]=0-arr[i];
            }
            k=k-negct;
            for(int i=0;i<n;i++){
                if(min>arr[i]){
                    min=arr[i];
                    j=i;
                }
            }
            if(k%2!=0)
                arr[j]=0-arr[j];
        }
        for(int i=0;i<n;i++){
            maxsum+=arr[i];
          //  System.out.println(arr[i]);
        }
        return maxsum;
    }

     public static void main(String []args){
        final long startt=System.nanoTime();
        int[] arr={-1, -1, -2, 4, 3, -23,-3};
        int k=4;
        System.out.println("Max Sum after K operations : "+findMaxSum(arr,arr.length,k));
        final long durt=System.nanoTime()-startt;
        System.out.println("Execution Time : "+durt);
     }
}
